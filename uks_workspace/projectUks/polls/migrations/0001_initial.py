# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-17 21:50
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.CharField(max_length=1024)),
                ('date_created', models.DateTimeField(verbose_name='date created')),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=1024)),
                ('date_created', models.DateTimeField(verbose_name='date created')),
                ('date_modified', models.DateTimeField(verbose_name='date modified')),
                ('date_closed', models.DateTimeField(verbose_name='date closed')),
            ],
        ),
        migrations.CreateModel(
            name='Object',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(verbose_name='date created')),
            ],
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='date')),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='polls.Object')),
                ('name', models.CharField(max_length=100)),
                ('size', models.IntegerField(default=0)),
            ],
            bases=('polls.object',),
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='polls.Object')),
                ('name', models.CharField(max_length=100)),
            ],
            bases=('polls.object',),
        ),
        migrations.AddField(
            model_name='version',
            name='object_version',
            field=models.ManyToManyField(related_name='object_version', to='polls.Object'),
        ),
        migrations.AddField(
            model_name='version',
            name='user_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_version', to='polls.User'),
        ),
        migrations.AddField(
            model_name='repository',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author', to='polls.User'),
        ),
        migrations.AddField(
            model_name='repository',
            name='contributions',
            field=models.ManyToManyField(related_name='contributions', to='polls.User'),
        ),
        migrations.AddField(
            model_name='issue',
            name='assigned',
            field=models.ManyToManyField(related_name='assigned', to='polls.User'),
        ),
        migrations.AddField(
            model_name='issue',
            name='issue_author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issue_author', to='polls.User'),
        ),
        migrations.AddField(
            model_name='issue',
            name='repository',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repository', to='polls.Repository'),
        ),
        migrations.AddField(
            model_name='comment',
            name='author_comment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author_comment', to='polls.User'),
        ),
        migrations.AddField(
            model_name='comment',
            name='issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issue', to='polls.Issue'),
        ),
        migrations.AddField(
            model_name='folder',
            name='repository_folder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repository_folder', to='polls.Repository'),
        ),
        migrations.AddField(
            model_name='folder',
            name='subfolder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Folder'),
        ),
        migrations.AddField(
            model_name='file',
            name='folder_obj',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='folder_obj', to='polls.Folder'),
        ),
    ]
